% Import all the data as matrices

x = AOOAll(:,1);
y = AOOAll(:,2);
x2 = 0:1:56;

x_b = AOOBEL(:,1)
y_b = AOOBEL(:,2)
xb2 = 0:1:26

x_d = AOODEN(:,1)
y_d = AOODEN(:,2)
xd2 = 0:1:7

x_f = AOOFRA(:,1)
y_f = AOOFRA(:,2)
xf2 = 0:1:56

x_g = AOOGER(:,1)
y_g = AOOGER(:,2)
xg2 = 0:1:15

x_i = AOOIRE(:,1)
y_i = AOOIRE(:,2)
xi2 = 0:1:35

x_n = AOONET(:,1)
y_n = AOONET(:,2)
xn2 = 0:1:39

x_no = AOONOR(:,1)
y_no = AOONOR(:,2)
xno2 = 0:1:20

x_s = AOOSWE(:,1)
y_s = AOOSWE(:,2)
xs2 = 0:1:14

x_uk = AOOUK(:,1)
y_uk = AOOUK(:,2)
xuk2 = 0:1:47


function [fitresult, gof] = createFits(x2, y, xuk2, y_uk, xg2, y_g, xb2, y_b, xd2, y_d, xf2, y_f, xi2, y_i, xn2, y_n, xno2, y_no, xs2, y_s)
%CREATEFITS(X2,Y,XUK2,Y_UK,XG2,Y_G,XB2,Y_B,XD2,Y_D,XF2,Y_F,XI2,Y_I,XN2,Y_N,XNO2,Y_NO,XS2,Y_S)
%  Create fits.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x2
%      Y Output: y
%  Data for 'untitled fit 2' fit:
%      X Input : xuk2
%      Y Output: y_uk
%  Data for 'untitled fit 3' fit:
%      X Input : xg2
%      Y Output: y_g
%  Data for 'untitled fit 4' fit:
%      X Input : xb2
%      Y Output: y_b
%  Data for 'untitled fit 6' fit:
%      X Input : xd2
%      Y Output: y_d
%  Data for 'untitled fit 7' fit:
%      X Input : xf2
%      Y Output: y_f
%  Data for 'untitled fit 8' fit:
%      X Input : xi2
%      Y Output: y_i
%  Data for 'untitled fit 9' fit:
%      X Input : xn2
%      Y Output: y_n
%  Data for 'untitled fit 10' fit:
%      X Input : xno2
%      Y Output: y_no
%  Data for 'untitled fit 11' fit:
%      X Input : xs2
%      Y Output: y_s
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 11-May-2022 14:42:24

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 10, 1 );
gof = struct( 'sse', cell( 10, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( x2, y );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.MaxFunEvals = 2000;
opts.MaxIter = 2000;
opts.StartPoint = [203 0 0 1];
opts.Upper = [732 Inf Inf 732];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'y vs. x2', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x2', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 2'.
[xData, yData] = prepareCurveData( xuk2, y_uk );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [75 0 0 1];
opts.Upper = [231 Inf Inf 231];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 2' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'y_uk vs. xuk2', 'untitled fit 2', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xuk2', 'Interpreter', 'none' );
ylabel( 'y_uk', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 3'.
[xData, yData] = prepareCurveData( xg2, y_g );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.MaxFunEvals = 2000;
opts.MaxIter = 2000;
opts.StartPoint = [15 0 0 1];
opts.Upper = [26 Inf Inf 26];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 3' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'y_g vs. xg2', 'untitled fit 3', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xg2', 'Interpreter', 'none' );
ylabel( 'y_g', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 4'.
[xData, yData] = prepareCurveData( xb2, y_b );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [4 0 0 1];
opts.Upper = [6 Inf Inf 6];

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 4' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'y_b vs. xb2', 'untitled fit 4', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xb2', 'Interpreter', 'none' );
ylabel( 'y_b', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 6'.
[xData, yData] = prepareCurveData( xd2, y_d );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [19 0 0 1];
opts.Upper = [54 Inf Inf 54];

% Fit model to data.
[fitresult{5}, gof(5)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 6' );
h = plot( fitresult{5}, xData, yData );
legend( h, 'y_d vs. xd2', 'untitled fit 6', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xd2', 'Interpreter', 'none' );
ylabel( 'y_d', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 7'.
[xData, yData] = prepareCurveData( xf2, y_f );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [31 0 0 1];
opts.Upper = [112 Inf Inf 112];

% Fit model to data.
[fitresult{6}, gof(6)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 7' );
h = plot( fitresult{6}, xData, yData );
legend( h, 'y_f vs. xf2', 'untitled fit 7', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xf2', 'Interpreter', 'none' );
ylabel( 'y_f', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 8'.
[xData, yData] = prepareCurveData( xi2, y_i );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [14 0 0 1];
opts.Upper = [48 Inf Inf 48];

% Fit model to data.
[fitresult{7}, gof(7)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 8' );
h = plot( fitresult{7}, xData, yData );
legend( h, 'y_i vs. xi2', 'untitled fit 8', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xi2', 'Interpreter', 'none' );
ylabel( 'y_i', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 9'.
[xData, yData] = prepareCurveData( xn2, y_n );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [15 0 0 1];
opts.Upper = [25 Inf Inf 25];

% Fit model to data.
[fitresult{8}, gof(8)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 9' );
h = plot( fitresult{8}, xData, yData );
legend( h, 'y_n vs. xn2', 'untitled fit 9', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xn2', 'Interpreter', 'none' );
ylabel( 'y_n', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 10'.
[xData, yData] = prepareCurveData( xno2, y_no );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [22 0 0 2];
opts.Upper = [74 Inf Inf 74];

% Fit model to data.
[fitresult{9}, gof(9)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 10' );
h = plot( fitresult{9}, xData, yData );
legend( h, 'y_no vs. xno2', 'untitled fit 10', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xno2', 'Interpreter', 'none' );
ylabel( 'y_no', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 11'.
[xData, yData] = prepareCurveData( xs2, y_s );

% Set up fittype and options.
ft = fittype( '(a*exp(c*x)/(k+exp(c*x)))*(1-exp(-b*x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [15 0 0 1];
opts.Upper = [29 Inf Inf 29];

% Fit model to data.
[fitresult{10}, gof(10)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 11' );
h = plot( fitresult{10}, xData, yData );
legend( h, 'y_s vs. xs2', 'untitled fit 11', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'xs2', 'Interpreter', 'none' );
ylabel( 'y_s', 'Interpreter', 'none' );
grid on


